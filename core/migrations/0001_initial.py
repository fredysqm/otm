# Generated by Django 2.0.4 on 2018-04-26 09:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banco',
            fields=[
                ('id', models.CharField(help_text='Siglas del banco', max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{3}$', message='Ingrese siglas válidas.')], verbose_name='Siglas')),
                ('nombre', models.CharField(help_text='Nombre del banco', max_length=60, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'banco',
                'verbose_name_plural': 'bancos',
            },
        ),
        migrations.CreateModel(
            name='CategoriaServicio',
            fields=[
                ('id', models.CharField(help_text='Siglas de la categoría de servicio', max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{3}$', message='Ingrese siglas válidas.')], verbose_name='Siglas')),
                ('nombre', models.CharField(help_text='Nombre de la categoría de servicio', max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'categoría de servicio',
                'verbose_name_plural': 'categorías de servicio',
            },
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.CharField(help_text='Siglas de la ciudad', max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{3}$', message='Ingrese siglas válidas.')], verbose_name='Siglas')),
                ('nombre', models.CharField(help_text='Nombre de la ciudad', max_length=60, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ciudad',
                'verbose_name_plural': 'ciudades',
            },
        ),
        migrations.CreateModel(
            name='Idioma',
            fields=[
                ('id', models.CharField(help_text='Siglas del idioma', max_length=2, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{2}$', message='Ingrese siglas válidas.')], verbose_name='Siglas')),
                ('nombre', models.CharField(help_text='Nombre del idioma', max_length=60, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'idioma',
                'verbose_name_plural': 'idiomas',
            },
        ),
        migrations.CreateModel(
            name='Localidad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre de la localidad', max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('altitud', models.PositiveIntegerField(default=0, help_text='Altitud de la localidad m.s.n.m.', verbose_name='Altitud')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
                ('ciudad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Ciudad')),
            ],
            options={
                'verbose_name': 'localidad',
                'verbose_name_plural': 'localidades',
            },
        ),
        migrations.CreateModel(
            name='MarcaComercial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre de la marca comercial', max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('direccion', models.CharField(blank=True, help_text='Dirección de la marca comercial', max_length=170, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese una dirección válida.')], verbose_name='Dirección')),
                ('telefono_fijo', models.CharField(blank=True, help_text='Ingrese solo números', max_length=12, validators=[django.core.validators.RegexValidator('^[0-9]{6,}$', message='Ingrese un número de teléfono fijo válido.')], verbose_name='Teléfono fijo')),
                ('telefono_movil', models.CharField(blank=True, help_text='Ingrese solo números', max_length=12, validators=[django.core.validators.RegexValidator('^[0-9]{9,}$', message='Ingrese un número de teléfono móvil válido.')], verbose_name='Teléfono móvil')),
                ('email', models.EmailField(blank=True, max_length=128, verbose_name='Email')),
                ('sitio_web', models.URLField(blank=True, max_length=128, verbose_name='Sitio Web')),
                ('observaciones', models.CharField(blank=True, max_length=512, verbose_name='Observaciones')),
                ('_verificacion_obj', models.CharField(choices=[('S', 'Si'), ('N', 'No')], default='N', max_length=1)),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
                ('categoria_servicio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.CategoriaServicio')),
                ('localidad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Localidad')),
            ],
            options={
                'verbose_name': 'marca comecial',
                'verbose_name_plural': 'marcas comerciales',
            },
        ),
        migrations.CreateModel(
            name='MarcaComercialCuenta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titular', models.CharField(help_text='Nombre del titular de la cuenta', max_length=128, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válida.')], verbose_name='Razón social')),
                ('cta', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator('^[0-9]$', message='Ingrese un número de cuenta válido.')], verbose_name='Número de cuenta')),
                ('cci', models.CharField(blank=True, max_length=40, validators=[django.core.validators.RegexValidator('^[0-9]$', message='Ingrese un número de cci válido.')], verbose_name='Número de cci')),
                ('_verificacion_obj', models.CharField(choices=[('S', 'Si'), ('N', 'No')], default='N', max_length=1)),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
                ('banco', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Banco')),
                ('marca_comercial', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.MarcaComercial')),
            ],
            options={
                'verbose_name': 'marca comecial cuenta',
                'verbose_name_plural': 'marcas comerciales cuentas',
            },
        ),
        migrations.CreateModel(
            name='ModalidadPago',
            fields=[
                ('id', models.CharField(help_text='Siglas de la modalidad de pago', max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{3}$', message='Ingrese siglas válidas.')], verbose_name='Siglas')),
                ('nombre', models.CharField(help_text='Nombre de la modalidad de pago', max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'modalidad de pago',
                'verbose_name_plural': 'modalidades de pago',
            },
        ),
        migrations.CreateModel(
            name='Moneda',
            fields=[
                ('id', models.CharField(help_text='Siglas de la moneda', max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{3}$', message='Ingrese siglas válidas.')], verbose_name='Siglas')),
                ('nombre', models.CharField(help_text='Nombre de la moneda', max_length=60, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('simbolo', models.CharField(help_text='Símbolo de la moneda', max_length=3, verbose_name='Símbolo')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'moneda',
                'verbose_name_plural': 'monedas',
            },
        ),
        migrations.CreateModel(
            name='Operador',
            fields=[
                ('id', models.CharField(help_text='Siglas del operador', max_length=6, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]+$', message='Ingrese siglas válidas.'), django.core.validators.MinLengthValidator(2)], verbose_name='Siglas')),
                ('nombre', models.CharField(help_text='Nombre del operador', max_length=60, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'operador',
                'verbose_name_plural': 'operadores',
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.CharField(help_text='Siglas del país', max_length=2, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{2}$', message='Ingrese siglas válidas.')], verbose_name='Siglas')),
                ('nombre', models.CharField(help_text='Nombre del país', max_length=60, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'país',
                'verbose_name_plural': 'paises',
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.CharField(max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[1-2]{1}[0-9]{10}$', message='Ingrese un número de documento válido.')], verbose_name='Número de documento')),
                ('razon_social', models.CharField(help_text='Nombre o razón social de la persona o empresa', max_length=128, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese una razón social válida.')], verbose_name='Razón social')),
                ('domicilio', models.CharField(help_text='Domicilio de la persona o empresa', max_length=170, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un domicilio válido.')], verbose_name='Domicilio')),
                ('_verificacion_obj', models.CharField(choices=[('S', 'Si'), ('N', 'No')], default='N', max_length=1)),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'proveedor',
                'verbose_name_plural': 'proveedores',
            },
        ),
        migrations.CreateModel(
            name='TipoCuentaBanco',
            fields=[
                ('id', models.CharField(help_text='Siglas del tipo de cuenta de banco', max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{3}$', message='Ingrese siglas válidas.')], verbose_name='Siglas')),
                ('nombre', models.CharField(help_text='Nombre del tipo de cuenta de banco', max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'tipo de cuenta banco',
                'verbose_name_plural': 'tipos de cuenta banco',
            },
        ),
        migrations.CreateModel(
            name='TipoDocProveedor',
            fields=[
                ('id', models.CharField(help_text='Siglas del tipo de documento de proveedor', max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{3}$', message='Ingrese siglas válidas.')], verbose_name='Siglas')),
                ('nombre', models.CharField(help_text='Nombre del documento de proveedor', max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúñÁÉÍÓÚÑ., \\-]+$', message='Ingrese un nombre válido.')], verbose_name='Nombre')),
                ('_estado_obj', models.CharField(choices=[('A', 'Activo'), ('S', 'Suspendido')], default='A', max_length=1)),
                ('_creado', models.DateTimeField(auto_now_add=True)),
                ('_modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'tipo de documento proveedor',
                'verbose_name_plural': 'tipos de documento proveedor',
            },
        ),
        migrations.AlterUniqueTogether(
            name='tipodocproveedor',
            unique_together={('nombre',)},
        ),
        migrations.AlterUniqueTogether(
            name='tipocuentabanco',
            unique_together={('nombre',)},
        ),
        migrations.AddField(
            model_name='proveedor',
            name='tipo_documento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.TipoDocProveedor', verbose_name='Tipo de documento'),
        ),
        migrations.AlterUniqueTogether(
            name='pais',
            unique_together={('nombre',)},
        ),
        migrations.AlterUniqueTogether(
            name='operador',
            unique_together={('nombre',)},
        ),
        migrations.AlterUniqueTogether(
            name='moneda',
            unique_together={('nombre',)},
        ),
        migrations.AlterUniqueTogether(
            name='modalidadpago',
            unique_together={('nombre',)},
        ),
        migrations.AddField(
            model_name='marcacomercialcuenta',
            name='moneda',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Moneda'),
        ),
        migrations.AddField(
            model_name='marcacomercialcuenta',
            name='tipo_cuenta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.TipoCuentaBanco'),
        ),
        migrations.AddField(
            model_name='marcacomercial',
            name='modalidad_pago',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ModalidadPago'),
        ),
        migrations.AddField(
            model_name='marcacomercial',
            name='proveedor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Proveedor'),
        ),
        migrations.AlterUniqueTogether(
            name='idioma',
            unique_together={('nombre',)},
        ),
        migrations.AddField(
            model_name='ciudad',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Pais'),
        ),
        migrations.AlterUniqueTogether(
            name='categoriaservicio',
            unique_together={('nombre',)},
        ),
        migrations.AlterUniqueTogether(
            name='banco',
            unique_together={('nombre',)},
        ),
        migrations.AlterUniqueTogether(
            name='proveedor',
            unique_together={('razon_social',)},
        ),
        migrations.AlterUniqueTogether(
            name='marcacomercialcuenta',
            unique_together={('marca_comercial', 'cta'), ('marca_comercial', 'moneda')},
        ),
        migrations.AlterUniqueTogether(
            name='marcacomercial',
            unique_together={('nombre', 'proveedor')},
        ),
        migrations.AlterUniqueTogether(
            name='localidad',
            unique_together={('nombre', 'ciudad')},
        ),
        migrations.AlterUniqueTogether(
            name='ciudad',
            unique_together={('pais', 'nombre')},
        ),
    ]
